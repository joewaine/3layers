{"remainingRequest":"/Users/josephwaine/2020-top-3-app-modernization-landing-page/node_modules/babel-loader/lib/index.js!/Users/josephwaine/2020-top-3-app-modernization-landing-page/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/josephwaine/2020-top-3-app-modernization-landing-page/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/josephwaine/2020-top-3-app-modernization-landing-page/src/components/QuestionAnswer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/josephwaine/2020-top-3-app-modernization-landing-page/src/components/QuestionAnswer.vue","mtime":1581465857805},{"path":"/Users/josephwaine/2020-top-3-app-modernization-landing-page/node_modules/cache-loader/dist/cjs.js","mtime":1581104905589},{"path":"/Users/josephwaine/2020-top-3-app-modernization-landing-page/node_modules/babel-loader/lib/index.js","mtime":1581104901680},{"path":"/Users/josephwaine/2020-top-3-app-modernization-landing-page/node_modules/cache-loader/dist/cjs.js","mtime":1581104905589},{"path":"/Users/josephwaine/2020-top-3-app-modernization-landing-page/node_modules/vue-loader/lib/index.js","mtime":1581104906100}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CloudDots from '@/components/CloudDots';\nimport DotPath from '@/components/DotPath';\nimport BrainCog from '@/components/BrainCog';\nimport Icons from '@/components/Icons';\nimport { TweenMax, Power3 } from 'gsap/all';\nvar plugins = [Power3];\nexport default {\n  name: 'QuestionAnswer',\n  data: function data() {\n    return {\n      showAnswer: false,\n      currentAnswer: null\n    };\n  },\n  components: {\n    Icons: Icons,\n    CloudDots: CloudDots,\n    DotPath: DotPath,\n    BrainCog: BrainCog\n  },\n  props: {\n    questions: {\n      type: Array\n    },\n    answers: {\n      type: Array\n    },\n    color: {\n      type: String\n    },\n    icon: {\n      type: String\n    },\n    addBackground: {\n      type: String\n    },\n    colorFlip: {\n      type: Boolean\n    }\n  },\n  methods: {\n    showCorrectAnswer: function showCorrectAnswer(i) {\n      this.currentAnswer = i;\n      this.showAnswer = true;\n    },\n    inView: function inView(isVisible) {\n      if (isVisible) {\n        var circles = Array.from(document.querySelectorAll('.gray-fill'));\n        TweenMax.staggerTo(circles, 0.5, {\n          opacity: 0.5,\n          onCompleteParams: ['{self}'],\n          onComplete: function onComplete() {\n            TweenMax.to(this.target, 0.5, {\n              opacity: 0,\n              delay: 0.2,\n              onCompleteParams: ['{self}'],\n              onComplete: function onComplete() {\n                this.target.style = '';\n              }\n            });\n          }\n        }, 0.1);\n      }\n    },\n    transitionIn: function transitionIn(el, done) {\n      TweenMax.from(el, 0.6, {\n        xPercent: -100,\n        ease: Power3.easeIn,\n        onComplete: done\n      });\n    },\n    transitionInComplete: function transitionInComplete() {},\n    transitionOut: function transitionOut(el, done) {\n      TweenMax.to(el, 0.6, {\n        xPercent: -100,\n        ease: Power3.easeIn,\n        onComplete: done\n      });\n    },\n    transitionOutComplete: function transitionOutComplete() {}\n  }\n};",{"version":3,"sources":["QuestionAnswer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6KA,OAAA,SAAA,MAAA,wBAAA;AACA,OAAA,OAAA,MAAA,sBAAA;AACA,OAAA,QAAA,MAAA,uBAAA;AACA,OAAA,KAAA,MAAA,oBAAA;AACA,SAAA,QAAA,EAAA,MAAA,QAAA,UAAA;AAEA,IAAA,OAAA,GAAA,CAAA,MAAA,CAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KADA;AAEA,MAAA,aAAA,EAAA;AAFA,KAAA;AAIA,GAPA;AAQA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA,KADA;AAEA,IAAA,SAAA,EAAA,SAFA;AAGA,IAAA,OAAA,EAAA,OAHA;AAIA,IAAA,QAAA,EAAA;AAJA,GARA;AAcA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KADA;AAIA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAJA;AAOA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAPA;AAUA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAVA;AAaA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAbA;AAgBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AAhBA,GAdA;AAkCA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,6BACA,CADA,EACA;AACA,WAAA,aAAA,GAAA,CAAA;AACA,WAAA,UAAA,GAAA,IAAA;AACA,KAJA;AAKA,IAAA,MALA,kBAKA,SALA,EAKA;AACA,UAAA,SAAA,EAAA;AACA,YAAA,OAAA,GAAA,KAAA,CAAA,IAAA,CAAA,QAAA,CAAA,gBAAA,CAAA,YAAA,CAAA,CAAA;AACA,QAAA,QAAA,CAAA,SAAA,CAAA,OAAA,EAAA,GAAA,EAAA;AACA,UAAA,OAAA,EAAA,GADA;AAEA,UAAA,gBAAA,EAAA,CAAA,QAAA,CAFA;AAGA,UAAA,UAHA,wBAGA;AACA,YAAA,QAAA,CAAA,EAAA,CAAA,KAAA,MAAA,EAAA,GAAA,EAAA;AACA,cAAA,OAAA,EAAA,CADA;AAEA,cAAA,KAAA,EAAA,GAFA;AAGA,cAAA,gBAAA,EAAA,CAAA,QAAA,CAHA;AAIA,cAAA,UAJA,wBAIA;AACA,qBAAA,MAAA,CAAA,KAAA,GAAA,EAAA;AACA;AANA,aAAA;AAQA;AAZA,SAAA,EAaA,GAbA;AAcA;AACA,KAvBA;AAwBA,IAAA,YAxBA,wBAwBA,EAxBA,EAwBA,IAxBA,EAwBA;AACA,MAAA,QAAA,CAAA,IAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AACA,QAAA,QAAA,EAAA,CAAA,GADA;AAEA,QAAA,IAAA,EAAA,MAAA,CAAA,MAFA;AAGA,QAAA,UAAA,EAAA;AAHA,OAAA;AAKA,KA9BA;AA+BA,IAAA,oBA/BA,kCA+BA,CAAA,CA/BA;AAgCA,IAAA,aAhCA,yBAgCA,EAhCA,EAgCA,IAhCA,EAgCA;AACA,MAAA,QAAA,CAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AACA,QAAA,QAAA,EAAA,CAAA,GADA;AAEA,QAAA,IAAA,EAAA,MAAA,CAAA,MAFA;AAGA,QAAA,UAAA,EAAA;AAHA,OAAA;AAKA,KAtCA;AAuCA,IAAA,qBAvCA,mCAuCA,CAAA;AAvCA;AAlCA,CAAA","sourcesContent":["<template>\n  <div class=\"full question-blade\" :class=\"color\" :style=\"addBackground\">\n    <div class=\"question-intro\">\n      <slot name=\"icon\" class=\"icon\"></slot>\n      <slot name=\"question\"></slot>\n    </div>\n    <div class=\"question-list\">\n      <h3 class=\"question-title\">\n        <slot name=\"questionTitle\"></slot>\n      </h3>\n      <ul v-observe-visibility=\"inView\">\n        <li v-if=\"colorFlip\" class=\"darken-text-color\">\n          Select one of the following:\n        </li>\n\n        <li v-else>\n          Select one of the following:\n        </li>\n\n\n\n        <li v-for=\"(question, index) in questions\" :key=\"index\" class=\"question\" @click=\"showCorrectAnswer(index)\">\n          <a>\n            <svg viewBox=\"0 0 28 28\" height=\"28\" width=\"28\">\n              <g transform=\"translate(1, 0)\">\n                <circle class=\"white-fill\" cx=\"12\" cy=\"14\" r=\"12\" stroke=\"#BDB9B9\" stroke-width=\"1\"></circle>\n                <circle class=\"gray-fill hide\" cx=\"12\" cy=\"14\" r=\"8\" stroke=\"#BDB9B9\" stroke-width=\"1\"></circle>\n              </g>\n            </svg>\n          </a>\n          <div v-if=\"colorFlip\" class=\"question-text darken-text-color\">\n          {{question}}\n          </div>\n          <div v-else class=\"question-text\">\n          {{question}}\n          </div>\n\n\n\n        </li>\n      </ul>\n    </div>\n    <slot name=\"image-background\"></slot>\n    <transition name=\"fade\" @enter=\"transitionIn\" @after-enter=\"transitionInComplete\" @leave=\"transitionOut\"\n                @after-leave=\"transitionOutComplete\">\n      <div class=\"full answer-blade\" v-if=\"showAnswer\" :style=\"addBackground\">\n        <div class=\"answer-intro\">\n        <div class=\"answer-child-icon\" v-if=\"icon === 1\">\n          <CloudDots />\n        </div>\n        <div class=\"answer-child-icon\" v-if=\"icon === 2\">\n            <DotPath />\n        </div>\n        <div class=\"answer-child-icon\" v-if=\"icon === 3\">\n          <BrainCog />\n        </div>\n        </div>\n        <div v-if=\"colorFlip\" class=\"answer-list darkened-text\">\n\n        <div v-if=\"icon === 1\">\n          <div class=\"svg-mobile\">\n          <CloudDots />\n          </div>\n        </div>\n        <div v-if=\"icon === 2\">\n          <div class=\"svg-mobile\">\n          <DotPath />\n          </div>\n        </div>\n        <div v-if=\"icon === 3\">\n          <div class=\"svg-mobile\">\n          <BrainCog />\n          </div>\n        </div>\n\n        <div>\n        <h2>Answer:</h2>\n        <div v-for=\"(answer, index) in answers\" :key=\"index\" class=\"answers\" v-if=\"index === currentAnswer\">\n        <div v-html=\"answer\"></div>\n        </div>\n        </div>\n        </div>\n\n        <div v-else class=\"answer-list\">\n\n        <div v-if=\"icon === 1\">\n          <div class=\"svg-mobile\">\n          <CloudDots />\n          </div>\n        </div>\n        <div v-if=\"icon === 2\">\n          <div class=\"svg-mobile\">\n          <DotPath />\n          </div>\n        </div>\n        <div v-if=\"icon === 3\">\n          <div class=\"svg-mobile\">\n          <BrainCog />\n          </div>\n        </div>\n\n        <div>\n        <h2>Answer:</h2>\n        <div v-for=\"(answer, index) in answers\" :key=\"index\" class=\"answers\" v-if=\"index === currentAnswer\">\n        <div v-html=\"answer\"></div>\n        </div>\n        </div>\n        </div>\n\n\n\n\n\n\n\n\n        <a @click=\"showAnswer = false\" class=\"close\" v-if=\"colorFlip\" style=\"color: #ffffff;\">\n<svg width=\"9px\" height=\"13px\" viewBox=\"0 0 9 13\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <!-- Generator: Sketch 63 (92445) - https://sketch.com -->\n    <title>chevron</title>\n    <desc>Created with Sketch.</desc>\n    <g id=\"Pages\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"Top-3-LP-Answers\" transform=\"translate(-369.000000, -2307.000000)\">\n            <!-- <rect fill=\"transparent\" x=\"0\" y=\"0\" width=\"480\" height=\"2900\"></rect> -->\n            <g id=\"Blade-4_Powering-Answer\" transform=\"translate(0.000000, 1767.000000)\">\n                <!-- <rect id=\"Background-Panel\" fill=\"#F2F2F2\" x=\"0\" y=\"0.00181488203\" width=\"480\" height=\"550\"></rect> -->\n                <g id=\"Back_Button\" transform=\"translate(371.000000, 538.000000)\" stroke=\"#ffffff\" stroke-linecap=\"round\" stroke-width=\"3\">\n                    <g id=\"Icon/chevron/indigo\" transform=\"translate(3.000000, 8.500000) rotate(-180.000000) translate(-3.000000, -8.500000) translate(0.000000, 3.000000)\">\n                        <polyline id=\"chevron\" transform=\"translate(3.000000, 5.500000) rotate(-90.000000) translate(-3.000000, -5.500000) \" points=\"-2 3 3 8 8 3\"></polyline>\n                    </g>\n                </g>\n            </g>\n        </g>\n    </g>\n</svg>\n\n\n\n          Back\n        </a>\n\n        <a @click=\"showAnswer = false\" class=\"close\" v-else>\n<svg width=\"9px\" height=\"13px\" viewBox=\"0 0 9 13\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <!-- Generator: Sketch 63 (92445) - https://sketch.com -->\n    <title>chevron</title>\n    <desc>Created with Sketch.</desc>\n    <g id=\"Pages\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"Top-3-LP-Answers\" transform=\"translate(-369.000000, -2307.000000)\">\n            <!-- <rect fill=\"transparent\" x=\"0\" y=\"0\" width=\"480\" height=\"2900\"></rect> -->\n            <g id=\"Blade-4_Powering-Answer\" transform=\"translate(0.000000, 1767.000000)\">\n                <!-- <rect id=\"Background-Panel\" fill=\"#F2F2F2\" x=\"0\" y=\"0.00181488203\" width=\"480\" height=\"550\"></rect> -->\n                <g id=\"Back_Button\" transform=\"translate(371.000000, 538.000000)\" stroke=\"#0175A2\" stroke-linecap=\"round\" stroke-width=\"3\">\n                    <g id=\"Icon/chevron/indigo\" transform=\"translate(3.000000, 8.500000) rotate(-180.000000) translate(-3.000000, -8.500000) translate(0.000000, 3.000000)\">\n                        <polyline id=\"chevron\" transform=\"translate(3.000000, 5.500000) rotate(-90.000000) translate(-3.000000, -5.500000) \" points=\"-2 3 3 8 8 3\"></polyline>\n                    </g>\n                </g>\n            </g>\n        </g>\n    </g>\n</svg>\n\n\n\n          Back\n        </a>\n\n\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport CloudDots from '@/components/CloudDots'\nimport DotPath from '@/components/DotPath'\nimport BrainCog from '@/components/BrainCog'\n  import Icons from '@/components/Icons'\n  import { TweenMax, Power3 } from 'gsap/all'\n\n  let plugins = [Power3]\n\n  export default {\n    name: 'QuestionAnswer',\n    data () {\n      return {\n        showAnswer: false,\n        currentAnswer: null\n      }\n    },\n    components: {\n      Icons,\n      CloudDots,\n      DotPath,\n      BrainCog\n    },\n    props: {\n      questions: {\n        type: Array\n      },\n      answers: {\n        type: Array\n      },\n      color: {\n        type: String\n      },\n      icon: {\n        type: String\n      },\n      addBackground: {\n        type: String\n      },\n      colorFlip: {\n        type: Boolean\n      }\n    },\n    methods: {\n      showCorrectAnswer(i){\n        this.currentAnswer = i;\n        this.showAnswer = true;\n      },\n      inView (isVisible) {\n        if (isVisible) {\n          let circles = Array.from(document.querySelectorAll('.gray-fill'))\n          TweenMax.staggerTo(circles, 0.5, {\n            opacity: 0.5,\n            onCompleteParams: ['{self}'],\n            onComplete () {\n              TweenMax.to(this.target, 0.5, {\n                opacity: 0,\n                delay: 0.2,\n                onCompleteParams: ['{self}'],\n                onComplete () {\n                  this.target.style = ''\n                }\n              })\n            }\n          }, 0.1)\n        }\n      },\n      transitionIn (el, done) {\n        TweenMax.from(el, 0.6, {\n          xPercent: -100,\n          ease: Power3.easeIn,\n          onComplete: done\n        })\n      },\n      transitionInComplete () {},\n      transitionOut (el, done) {\n        TweenMax.to(el, 0.6, {\n          xPercent: -100,\n          ease: Power3.easeIn,\n          onComplete: done\n        })\n      },\n      transitionOutComplete () {}\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  .question-blade {\n    position: relative;\n    overflow: auto;\n    display: flex;\n    // align-items: center;\n    align-items: top;\n    justify-content: flex-start;\n    flex-direction: column;\n    padding: 40px 20px;\n\n    @media (min-width: $tablet) {\n      flex-direction: row;\n      justify-content: center;\n      padding: 0;\n    }\n\n    &.gray {\n      background-color: $cisco-lt-gray;\n      .answer-blade {\n        background-color: $cisco-lt-gray;\n      }\n    }\n    &.white {\n      background-color: $white;\n      .answer-blade {\n        background-color: $white;\n      }\n    }\n    &.blue {\n      background: $cisco-dk-blue url(\"~@/assets/images/blue-tile.jpg\") repeat;\n      * {\n        color: $white;\n      }\n      .answer-blade {\n        background: $cisco-dk-blue url(\"~@/assets/images/blue-tile.jpg\") repeat;\n      }\n    }\n    &.lightblue{\n        background: $cisco-lt-blue;\n    }\n    .corner-media {\n      position: absolute;\n      bottom: 0;\n      right: 0;\n      z-index: 1;\n      canvas {\n        transform-origin: right bottom;\n        transform: translateY(50px) scale(0.5);\n      }\n\n      @media (min-width: $tablet) {\n        canvas {\n          transform: scale(0.7);\n        }\n      }\n      @media (min-width: $small_desktop) {\n        bottom: 0;\n      }\n    }\n\n    .question-intro {\n      position: relative;\n      display: inline-block;\n      @media (min-width: $tablet) {\n        width: 50vw;\n        margin-left: 40px;\n        margin-top: 0;\n        > h4, h2, p {\n          width: 80%;\n        }\n      }\n      width: calc(50%);\n      margin-left: 0;\n      @media (min-width: $small_desktop) {\n        width: calc(50% - 200px);\n        margin-left: 150px;\n      }\n      @media (max-width: $tablet) {\n            width: calc(100%);\n      }\n      .icon {\n        position: absolute;\n        top: -10px;\n        left: -20px;\n        width: 100px;\n        height: 100px;\n        float: left;\n        margin-right: -20px;\n\n        @media (min-width: $tablet) {\n          top: -100px;\n          width: 82px;\n          height: 82px;\n          margin: 0;\n          float: none;\n        }\n      }\n      img.animated-image{\n        width: 100%;\n         @media (max-width: $tablet) {\n           display: none;\n         }\n      }\n    }\n\n    h4 {\n      font-family: $cisco-sans-light;\n      margin-bottom: 0;\n      margin-top: 10px;\n      &:not(.answer-title) {\n        margin-left: 80px;\n      }\n      @media (min-width: $tablet) {\n        margin-top: 0;\n        margin-bottom: 10px;\n        font-size: 24px;\n        &:not(.answer-title) {\n          margin-left: 0;\n        }\n      }\n    }\n\n    h3.question-title {\n      margin-bottom: 40px;\n      > div {\n        width: 80%;\n      }\n      @media (min-width: $tablet) {\n        font-size: 24px;\n        margin-bottom: 20px;\n      }\n    }\n\n    h2 {\n      font-family: $cisco-sans-extra-light;\n      margin-bottom: 15px;\n      // margin-left: 80px;\n      margin-left: 0;\n      font-size: 36px;\n      line-height: 1;\n      @media (max-width: $tablet) {\n        margin-left: 0;\n        font-size: 32px;\n      }\n    }\n\n    p {\n      font-size: 18px;\n      clear: both;\n    }\n\n    .question-list {\n      position: relative;\n      display: inline-block;\n      z-index: 10;\n      @media (min-width: $tablet) {\n        width: calc(50% + 200px);\n        margin-left: 50px;\n      }\n      @media (min-width: $small_desktop) {\n        width: calc(50% + 50px);\n        margin-left: 50px;\n      }\n      ul {\n        li {\n          display: flex;\n          align-items: flex-start;\n          font-size: 18px;\n          line-height: 24px;\n          margin-bottom: 20px;\n          @media (min-width: $tablet) {\n            width: 80%;\n          }\n          @media (min-width: $small_desktop) {\n            width: 70%;\n          }\n          svg {\n            margin-right: 20px;\n            @media (max-width: $tablet) {\n              margin-top: 10px;\n              margin-bottom: 10px;\n            }\n          }\n        }\n      }\n    }\n\n    li.question {\n      cursor: pointer;\n      .hide {\n        transition: opacity 300ms ease-in-out;\n      }\n      &:hover {\n        .hide {\n          // opacity: 0.5;\n          opacity: 0.75;\n        }\n      }\n      &:active {\n        .hide {\n          opacity: 1;\n        }\n      }\n    }\n    &.full {\n      padding-bottom: 30vw;\n      @media (max-width: $tablet) {\n        padding-bottom: 10vw;\n      }\n    }\n    .full,\n    &.full {\n      position: relative;\n      overflow: hidden;\n      height: 650px;\n\n      @media (min-width: $tablet) {\n        height: 525px;\n        padding-bottom: 40px;\n        padding-top: 120px;\n      }\n\n      @media (max-width: $tablet) {\n        height: auto;\n        min-height: auto;\n      }\n\n    }\n\n    .answer-blade {\n      position: absolute;\n      top: 120px;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      z-index: 40;\n      min-height: 670px;\n\n      @media (min-width: $tablet) {\n        top: 0;\n        min-height: 525px;\n      }\n\n      .answer-intro {\n        width: calc(50% - 50px);\n        display: none;\n        min-height: 200px;\n        .icon {\n          position: absolute;\n          transform: translate3d(-50%, -50%, 0);\n          top: 30%;\n        }\n        .answer-icon-1 {\n          left: 35%;\n        }\n        .answer-icon-2 {\n          left: 10%;\n        }\n        .answer-icon-3 {\n          left: 22.5%;\n          top: 50%;\n        }\n        @media (min-width: $tablet) {\n          display: block;\n        }\n        @media (min-width: $small_desktop) {\n          .answer-icon-1 {\n            left: 32%;\n          }\n          .answer-icon-2 {\n            left: 18%;\n          }\n          .answer-icon-3 {\n            left: 25%;\n          }\n        }\n        @media (min-width: $small_desktop) {\n          margin-left: 250px;\n          width: calc(50% - 300px);\n        }\n        @media (max-width: $small_desktop) {\n          margin-left: 0px;\n          width: calc(50%);\n        }\n\n      }\n      .answer-list {\n        // padding: 20px;\n        h4.answer-title {\n          color: $cisco-lt-blue;\n          margin-bottom: 20px;\n        }\n        .pill-button {\n          margin-top: 30px;\n          margin-bottom: 30px;\n        }\n        @media (min-width: $tablet) {\n          width: calc(50%);\n          > div {\n            width: 85%;\n          }\n        }\n        @media (min-width: $small_desktop) {\n          width: calc(50% + 50px);\n          > div {\n            width: 80%;\n          }\n        }\n\n      .svg-mobile{\n\n        display: none;\n        width: 80px;\n        height: 80px;\n        float: left;\n    margin-top: -16px;\n            @media (max-width: $tablet) {\n                display: inline-block;\n            }\n            @media (max-width: $mobile) {\n                display: inline-block;\n            }\n\n\n      }\n\n\n      }\n\n      top: 0;\n      min-height: 100%;\n\n\n      @media (max-width: $tablet) {\n        height: auto;\n        min-height: auto !important;\n      }\n\n    }\n\n    .close {\n      cursor: pointer;\n      &:hover {\n        text-decoration: none;\n      }\n      svg {\n        margin-right: 10px;\n      }\n      .blue & {\n        color: $white;\n      }\n\n        bottom: 20px;\n        right: 20px;\n        right: 20px;\n        position: absolute;\n\n\n    }\n  }\n.question{\n\n    background: rgba(77, 76, 76, 0.05);\n    // padding: 12px 11px 9px;\n    padding: 15px 14px 8px;\n    border-radius: 28px;\n    position: relative;\n    transition: all .5s ease;\n    .question-text{\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      left: 50px;\n      width: 85%;\n\n      @media (max-width: $small_desktop) {\n        position: initial;\n        top: initial;\n        transform: initial;\n\n        margin-left: 35px;\n        margin-top: -2px;\n\n      }\n\n    }\n    &:hover{\n    background: rgba(77, 76, 76, 0.075);\n    }\n    @media (max-width: $large_desktop) {\n      padding: 30px 14px 16px;\n    }\n    @media (max-width: $small_desktop) {\n      padding: 16px 14px 13px;\n    }\n  }\n\n\n\n\n\n.answer-blade a,\n.answer-blade a[href],\n.answer-blade a[href]:visited{\ncolor: #007493;\n}\n\n.answer-list ul{\n    list-style: initial;\n    padding-left: .8em;\n    margin-bottom: 14px;\n    li{\n      font-size: 18px;\n      line-height: 1.375em;\n    }\n}\n\n\n\n.answer-list .answers a{\n  line-height: 1.8em;\n\n\n  transition: all .5s ease;\n\n\n\n}\n\n\n\n.question-blade .answer-blade{\n\n      @media (max-width: $tablet) {\n    align-items: initial;\n\n\n    padding: 56px 20px 40px 20px;\n\n      }\n\n}\n\n.answer-child-icon{\n    width: 90%;\n    margin: 0 auto;\n    text-align: center;\n}\n\nli.question a{\n    @media (max-width: $small_desktop) {\n      position: absolute;\n      // top: 50%;\n      top: calc(50% + 3px);\n      transform: translateY(-50%);\n    }\n  }\n\n\n\n.answer-list{\n\n&.darkened-text{\nh2, p, li{\ncolor: #403C3D;\n}\n}\n}\n\n\n.darken-text-color{\n color: #1B1B1B;\n}\n\n\n</style>\n"],"sourceRoot":"src/components"}]}